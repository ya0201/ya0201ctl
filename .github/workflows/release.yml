name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            ext: linux
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: macos

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install dependencies (musl)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y musl-tools

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create archive
        run: |
          mkdir -p dist
          BINARY_NAME=$(basename $(cargo metadata --no-deps --format-version=1 | jq -r '.packages[0].targets[] | select(.kind[]=="bin") | .name'))
          cp target/${{ matrix.target }}/release/$BINARY_NAME dist/
          cd dist
          tar -czf ${BINARY_NAME}-${{ matrix.ext }}.tar.gz $BINARY_NAME

      - name: Set up GitHub CLI
        uses: cli/cli-action@v2

      - name: Create GitHub Release and upload asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BINARY_NAME=$(basename $(cargo metadata --no-deps --format-version=1 | jq -r '.packages[0].targets[] | select(.kind[]=="bin") | .name'))
          TAG_NAME=${GITHUB_REF#refs/tags/}
          gh release create "$TAG_NAME" \
            "dist/${BINARY_NAME}-${{ matrix.ext }}.tar.gz" \
            --title "$TAG_NAME" \
            --notes "Release for $TAG_NAME" \
            --target "${{ github.sha }}"
